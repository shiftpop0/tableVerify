import matplotlib.pyplot as plt
import numpy as np

# 示例数据
data_bit=[19.98/100, 17.97/100, 20.98/100, 19.98/100, 19.97/100, 18.98/100, 19.98/100, 18.98/100, 18.96/100, 20.96/100, 19.97/100, 16.99/100, 18.96/100, 18.96/100, 20.96/100, 17.98/100, 19.97/100, 19.98/100, 19.98/100, 18.98/100, 20.96/100, 18.98/100, 18.98/100, 18.97/100, 18.98/100, 18.98/100, 19.98/100, 19.97/100, 18.97/100, 17.96/100, 19.98/100, 18.98/100, 18.96/100, 18.98/100, 18.97/100, 19.98/100, 20.96/100, 17.98/100, 19.99/100, 20.98/100, 19.98/100, 17.97/100, 19.98/100, 18.97/100, 20.98/100, 19.00/100, 18.97/100, 19.98/100, 19.97/100, 19.97/100, 19.98/100, 18.98/100, 18.97/100, 19.97/100, 20.99/100, 18.98/100, 20.97/100, 18.98/100, 20.97/100, 18.97/100, 19.98/100, 19.97/100, 19.98/100, 18.99/100, 19.96/100, 18.97/100, 20.97/100, 19.98/100, 19.96/100, 20.99/100, 20.00/100, 20.97/100, 18.98/100, 19.97/100, 19.98/100, 19.98/100, 18.98/100, 20.97/100, 19.98/100, 20.97/100, 18.97/100, 19.98/100, 18.97/100, 18.98/100, 19.96/100, 20.96/100, 19.99/100, 19.97/100, 20.97/100, 19.98/100, 18.98/100, 18.96/100, 19.97/100, 19.98/100, 20.97/100, 18.97/100, 19.99/100, 18.98/100, 18.99/100, 19.97/100, 19.97/100, 19.99/100, 19.97/100 ]
data_heng_14=[35.98/100, 35.94/100, 34.95/100, 35.95/100, 36.94/100, 33.97/100, 34.96/100, 33.95/100, 34.93/100, 33.94/100, 33.94/100, 33.96/100, 33.98/100, 34.95/100, 36.00/100, 36.94/100, 33.95/100, 35.96/100, 33.96/100, 35.93/100, 34.95/100, 35.96/100, 34.96/100, 33.98/100, 35.96/100, 34.95/100, 34.96/100, 32.98/100, 33.94/100, 34.96/100, 33.96/100, 33.96/100, 32.96/100, 32.95/100, 33.93/100, 33.99/100, 33.96/100, 33.97/100, 33.96/100, 33.96/100, 34.96/100, 33.98/100, 34.97/100, 34.93/100, 33.96/100, 35.95/100, 34.95/100, 33.93/100, 33.96/100, 33.95/100, 31.98/100, 34.96/100, 32.96/100, 32.96/100, 35.96/100, 35.95/100, 34.96/100, 33.96/100, 35.95/100, 33.94/100, 32.97/100, 35.94/100, 32.94/100, 40.97/100, 36.94/100, 35.94/100, 35.96/100, 35.95/100, 33.96/100, 35.94/100, 34.96/100, 35.95/100, 34.93/100, 33.96/100, 34.95/100, 34.96/100, 34.99/100, 34.94/100, 42.92/100, 39.95/100, 35.96/100, 33.96/100, 34.96/100, 37.97/100, 35.00/100, 32.95/100, 34.96/100, 32.96/100, 32.95/100, 32.95/100, 36.96/100, 32.96/100, 34.95/100, 35.94/100, 33.96/100, 34.98/100, 33.96/100, 33.96/100, 33.96/100, 35.94/100, 35.93/100, 30.96/100, 35.95/100, 31.96/100, 35.99/100, 37.93/100]
data_heng_12=[41.93/100, 35.96/100, 37.96/100, 37.95/100, 38.95/100, 40.92/100, 35.94/100, 35.94/100, 36.93/100, 38.95/100, 35.92/100, 35.95/100, 38.94/100, 34.96/100, 38.96/100, 34.93/100, 38.94/100, 37.97/100, 35.96/100, 36.96/100, 39.95/100, 40.93/100, 35.94/100, 39.94/100, 34.94/100, 36.92/100, 37.96/100, 38.95/100, 36.95/100, 33.99/100, 36.94/100, 36.94/100, 37.96/100, 34.95/100, 36.96/100, 36.96/100, 36.96/100, 34.95/100, 35.00/100, 33.96/100, 35.95/100, 35.94/100, 41.93/100, 37.95/100, 39.96/100, 36.94/100, 34.96/100, 36.95/100, 37.95/100, 35.98/100, 36.94/100, 40.94/100, 37.99/100, 42.95/100, 38.94/100, 37.96/100, 37.96/100, 37.94/100, 36.94/100, 37.94/100, 36.94/100, 35.96/100, 38.94/100, 35.95/100, 37.97/100, 38.95/100, 33.96/100, 36.98/100, 38.94/100, 36.94/100, 34.96/100, 35.96/100, 36.96/100, 35.95/100, 34.94/100, 36.95/100, 36.93/100, 43.91/100, 35.99/100, 34.95/100, 38.00/100, 34.94/100, 35.95/100, 37.93/100, 36.96/100, 35.96/100, 36.95/100, 35.99/100, 38.96/100, 36.93/100, 37.95/100, 38.94/100, 37.96/100, 34.95/100, 35.94/100, 34.96/100, 39.95/100, 34.93/100, 33.94/100, 34.94/100, 35.93/100, 34.97/100, 35.97/100, 32.94/100, 32.96/100, 35.95/100, 34.93/100, 34.97/100]
data_ingress = [45.92/100,45.91/100,38.93/100,53.91/100,40.94/100,56.93/100,59.92/100,38.95/100,44.91/100,12.98/100,44.94/100,52.60/100,53.91/100,50.91/100,41.92/100,45.88/100,47.92/100,37.93/100,43.95/100,35.96/100,45.95/100,47.95/100,43.91/100,53.93/100,49.87/100,47.92/100,34.98/100,45.95/100,20.97/100,28.96/100,46.92/100,45.95/100,38.95/100,28.95/100,12.00/100,42.92/100,46.92/100,43.98/100,45.94/100,45.94/100,42.92/100,41.92/100,32.96/100,34.94/100,37.99/100,46.98/100,35.95/100,32.95/100,45.99/100,32.95/100,41.93/100,41.92/100,44.95/100,48.98/100,41.94/100,47.94/100,35.96/100,39.92/100,42.98/100,26.95/100,44.93/100,46.94/100,29.96/100,36.96/100,40.99/100,47.95/100,44.93/100,49.94/100,30.94/100,12.98/100,12.99/100,14.98/100,12.98/100,17.97/100,48.99/100,54.90/100,44.92/100,54.91/100,48.94/100,44.95/100,41.91/100,49.99/100,46.92/100,49.93/100,46.98/100,43.92/100,50.91/100,52.97/100,29.99/100,39.95/100,47.93/100,42.93/100,39.97/100,40.96/100,44.94/100,39.95/100,42.95/100,48.94/100,28.95/100,44.93/100,43.91/100,55.90/100,47.94/100,24.98/100,40.94/100,50.90/100,50.98/100,42.95/100,38.93/100,43.93/100,50.92/100,46.98/100,37.93/100,36.94/100,31.95/100,57.91/100,54.93/100,45.95/100,35.97/100,44.91/100,47.94/100,51.91/100,45.94/100,41.96/100,51.92/100,38.95/100,29.97/100,42.94/100,46.99/100,42.95/100,49.90/100,43.94/100,44.95/100,48.93/100,50.94/100,52.94/100,37.96/100,41.95/100,54.92/100,37.95/100,35.99/100]
plt.figure(figsize=(10, 5),linewidth=6)

y = [np.mean(data_bit),np.mean(data_heng_14),np.mean(data_heng_12),np.mean(data_ingress)]
plt.plot([1, 2, 3, 4], y, marker='o', markersize=4, linestyle='-', color='r', label='average CPU utilization')

# 绘制箱型图
plt.boxplot([data_bit, data_heng_14,data_heng_12,data_ingress], showfliers=False, labels=['bit-based', 'a quarter rules','half rules','ingress-based'])
plt.xticks(fontsize=14, fontweight='bold')
plt.yticks([0, 0.2, 0.4, 0.6], ['0%', '20%', '40%', '60%'],fontsize=16, fontweight='bold')
# plt.xlabel('123',fontsize=20,)
plt.ylabel('CPU Utilization(%)',fontsize=20,fontweight='bold')
for spine in plt.gca().spines.values():
    spine.set_linewidth(2)  # 设置边框粗细为2
# 添加图例
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
